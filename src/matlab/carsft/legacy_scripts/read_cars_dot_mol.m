function [molpar] = read_cars_dot_mol(filename, startRow, endRow)
%IMPORTFILE1 Import numeric data from a text file as a matrix.
%   CARS = IMPORTFILE1(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   CARS = IMPORTFILE1(FILENAME, STARTROW, ENDROW) Reads data from rows
%   STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   CARS = importfile1('CARS.txt', 1, 25);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2022/04/18 20:33:41

%(gas,we,wexe,weye,weze,alphae,Be,De,betae,deltae,gammae,Ho,He,max(v),max(J))

%% Initialize variables.
delimiter = ' ';
if nargin<=2
    startRow = 1;
    endRow = inf;
end

%% Format for each line of text:
%   column1: text (%s)
%	column2: text (%s)
%   column3: text (%s)
%	column4: text (%s)
%   column5: text (%s)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%s%s%s%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'TextType', 'string', 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'TextType', 'string', 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
CARS = [dataArray{1:end-1}];

%%%%%now parse the CARS variable from the autogenerated script%%%
gasname = CARS(1,1:size(CARS,2)-1);molpar.gasname = gasname;
varname = CARS(2:size(CARS,1),1);

CARS = CARS(2:size(CARS,1),2:size(CARS,2));
for k = 1:length(varname)
    c = CARS(k,:);
    stg = [varname{k} ' = zeros(1,' num2str(size(CARS,2)) ');'];eval(stg);
for j = 1:size(CARS,2)
    if (isempty(c{j}) == 1); c{j} = '0'; end
    stg = ['molpar.' varname{k} '(' num2str(j) ') = ' c{j} ';'];eval(stg);
end
end


%%%%%%assign nuclear spin statistical weight for known CARS.MOL species
molpar.gI = ones(length(gasname),2);
for k = 1:length(gasname)
    if(gasname(k) == 'N2');molpar.gI(k,:) = [3 6];end
    if(gasname(k) == 'CO');molpar.gI(k,:) = [1 1];end
    if(gasname(k) == 'O2');molpar.gI(k,:) = [1 0];end
    if(gasname(k) == 'H2');molpar.gI(k,:) = [3 1];end
end

